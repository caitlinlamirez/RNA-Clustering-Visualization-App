/**
 * Plugin Client to latch into the S3 Lifecycle and communicate with the S3 Application Core
 */
type Plugin<T> = {
    _id: string;
    _createdAt: number;
    _updatedAt: number;
    _updatedBy: string;
    _createdBy: string;
    data: {
        title: string;
        roomId: string;
        boardId: string;
        position: {
            x: number;
            y: number;
            z: number;
        };
        size: {
            width: number;
            height: number;
            depth: number;
        };
        rotation: {
            x: number;
            y: number;
            z: number;
        };
        type: 'PluginApp';
        state: Partial<T>;
        raised: boolean;
    };
};
/**
 * The interface for Plugins to communicate with SAGE3.
 * Plugins are contained with in iFrames and we use the `window` messaging system to communciate.
 */
export declare class SAGE3Plugin<T> {
    state: Plugin<T> | null;
    private updateSubs;
    constructor();
    private init;
    private updateFromSAGE3;
    private publishToSubscriptions;
    /**
     * Subscribe to updates from the SAGE3 Main Process.
     * @param updateCallback Call back which will provide the new state updates from the SAGE3 main process.
     */
    subscribeToUpdates(updateCallback: (state: Plugin<T>, user: string) => void): void;
    /**
     * Send an update to the SAGE3 Main Process
     * @param newState The new state to send to the SAGE3 Main process. Will be populated out to all clients.
     * @returns
     */
    update(newState: Partial<Plugin<T>['data']>): void;
}
export {};
